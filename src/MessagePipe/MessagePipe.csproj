<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
<TargetFrameworks>net7.0;net8.0</TargetFrameworks>
        <WarningsAsErrors>true</WarningsAsErrors>
        <Configurations>Debug;Release;WinBenchmark</Configurations>
        <LangVersion>12.0</LangVersion>
      
        <!-- NuGet Packaging -->
        <PackageTags>pubsub;eventaggregator</PackageTags>
        <Description>High performance in-memory/distributed messaging pipeline for .NET and Unity.</Description>
        <SignAssembly>true</SignAssembly>
        <IsPackable>true</IsPackable>
    </PropertyGroup>

    <ItemGroup>
        <None Include="Icon.png" Pack="true" PackagePath="/" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="8.0.0" />
    </ItemGroup>
    <ItemGroup Condition="$(TargetFramework) == 'netstandard2.1'">
        <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="8.0.0" />
        <PackageReference Include="System.Threading.Channels" Version="8.0.0" />
    </ItemGroup>

    <ItemGroup>
        <None Update="Disposables.tt">
            <Generator>TextTemplatingFileGenerator</Generator>
            <LastGenOutput>Disposables.cs</LastGenOutput>
        </None>
        <Compile Update="Disposables.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>Disposables.tt</DependentUpon>
        </Compile>
    </ItemGroup>
  
    <PropertyGroup>
      <GenerateNuspecDependsOn>$(GenerateNuspecDependsOn);SetPackageVersion</GenerateNuspecDependsOn>
    </PropertyGroup>

    <Target Name="SetPackageVersion" DependsOnTargets="Build">
      <PropertyGroup>
        <!-- <PackageVersion>$([System.DateTime]::Now.ToString(&quot;yyyy.MM.dd.HHmmss&quot;))</PackageVersion> -->
        <!-- You can customize the format and the rule about how version increases here. -->
        <PackageVersion>$([System.DateTime]::Now.ToString("2.MM.dd"))</PackageVersion>
      </PropertyGroup>
    </Target> 
  
    <Target Name="PostBuild" AfterTargets="PostBuildEvent">
      <Exec Command="PowerShell -NoProfile -ExecutionPolicy Bypass -File $(ProjectDir)RegisterNuGetRepoV3.ps1 -RepoName $(ProjectName)" />
    </Target>

    <!-- Copy files for Unity -->
    <PropertyGroup>
        <DestinationRoot>$(MSBuildProjectDirectory)\..\MessagePipe.Unity\Assets\Plugins\MessagePipe\Runtime\</DestinationRoot>
        <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
        <Title>RUB-TrueSpark-MessagePipe</Title>
        <IncludeSymbols>True</IncludeSymbols>
    </PropertyGroup>
    <ItemGroup>
        <TargetFiles1 Include="$(MSBuildProjectDirectory)\**\*.cs" Exclude="**\bin\**\*.*;**\obj\**\*.*;_InternalVisibleTo.cs" />
    </ItemGroup>

    <Target Name="PostBuild" AfterTargets="PostBuildEvent">
        <Copy SourceFiles="@(TargetFiles1)" DestinationFiles="$(DestinationRoot)\%(RecursiveDir)%(Filename)%(Extension)" SkipUnchangedFiles="true" />

        <!-- After copy, replace for unity codes --><!--
        <Exec Command="" />-->
    </Target>
</Project>
